{"version":3,"sources":["reportWebVitals.js","components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js","components/TodoItem.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TodoItem","props","todo","completed","id","title","className","styles","item","checkbox","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","TodosList","todos","map","Header","padding","lineHeight","fontSize","fontWeight","marginBottom","textTransform","textAlign","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","trim","addTodoProps","alert","onSubmit","this","placeholder","Component","TodoContainer","uuidv4","handleChange","prevState","delTodo","filter","addTodoItem","newTodo","Fragment","React","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f583c36a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport styles from \"./TodoItem.module.css\";\n\nconst TodoItem = (props) => {\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#595959\",\n    opacity: 0.4,\n    textDecoration: \"line-through\",\n  };\n  const { completed, id, title } = props.todo;\n\n  return (\n    <li className={styles.item}>\n      <input\n        className={styles.checkbox}\n        type=\"checkbox\"\n        checked={completed}\n        onChange={() => props.handleChangeProps(id)}\n      />\n      <button onClick={() => props.deleteTodoProps(id)}>\n        Delete\n      </button>\n      <span style={completed ? completedStyle : null}>\n        {title}\n      </span>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\nconst TodosList = (props) => {\n  return (\n    <ul>\n      {props.todos.map((todo) => (\n        // Añadimos \"key\" que hace función de \"track-by\" en ngFor Angular\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleChangeProps={props.handleChangeProps}\n          deleteTodoProps={props.deleteTodoProps}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodosList;\n","import React from \"react\";\n\nconst Header = () => {\n  const headerStyle = {\n    padding: \"20px 0\",\n    lineHeight: \"1.5em\",\n  }\n  return (\n    <header style={headerStyle}>\n      <h1 style={{\n        fontSize: \"6rem\",\n        fontWeight: \"600\",\n        marginBottom: \"2rem\",\n        lineHeight: \"1em\",\n        color: \"#ececec\",\n        textTransform: \"lowercase\",\n        textAlign: \"center\",\n      }}>todos</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nclass InputTodo extends Component {\n  state = {\n    title: \"\",\n  };\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.state.title.trim()) {\n      // Enviamos la información del título añadido al padre (TodoContainer)\n      // Nos comunicamos desde aquí\n      this.props.addTodoProps(this.state.title);\n      // Reseteamos la información del input\n      this.setState({\n        title: \"\",\n      });\n    } else {\n      alert(\"Please write item\");\n    }\n  };\n  // addTodoProps lo usamos para comunicarnos con \"addTodoProps\"\n  // del padre (TodoContainer), que es addTodoProps: {this.addItem}\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\n        <input\n          type=\"text\"\n          className=\"input-text\"\n          placeholder=\"Add Todo...\"\n          value={this.state.title}\n          name=\"title\"\n          onChange={this.onChange}\n        />\n        <button className=\"input-submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nexport default InputTodo;\n","import React from \"react\";\nimport TodosList from \"./TodosList\";\nimport Header from \"./Header\";\nimport InputTodo from \"./InputTodo\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n//styles sheets\nimport \"./../App.css\";\n\nclass TodoContainer extends React.Component {\n  state = {\n    todos: [\n      {\n        id: uuidv4(),\n        title: \"Setup development environment\",\n        completed: true,\n      },\n      {\n        id: uuidv4(),\n        title: \"Develop website and add content\",\n        completed: false,\n      },\n      {\n        id: uuidv4(),\n        title: \"Deploy to live server\",\n        completed: false,\n      },\n    ],\n  };\n\n  handleChange = (id) => {\n    this.setState((prevState) => {\n      return {\n        todos: prevState.todos.map((todo) => {\n          if (todo.id === id) {\n            return {\n              ...todo,\n              completed: !todo.completed,\n            };\n          }\n          return todo;\n        }),\n      };\n    });\n  };\n\n  delTodo = (id) => {\n    this.setState({\n      todos: [\n        // Menos el seleccionado que lo eliminamos, obtener los demás\n        ...this.state.todos.filter((todo) => {\n          return todo.id !== id;\n        }),\n      ],\n    });\n  };\n\n  addTodoItem = (title) => {\n    const newTodo = {\n      // ID nuevo asignado teniendo en cuenta el ID del último elemento + 1\n      id: uuidv4(),\n      title: title,\n      completed: false,\n    };\n    // Actualizamos el stado con la nueva tarea\n    this.setState({\n      todos: [...this.state.todos, newTodo],\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"inner\">\n            <Header />\n            <InputTodo addTodoProps={this.addTodoItem} />\n            <TodosList\n              todos={this.state.todos}\n              handleChangeProps={this.handleChange}\n              deleteTodoProps={this.delTodo}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default TodoContainer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n//component file\nimport TodoContainer from \"./components/TodoContainer\";\n\n//styles sheets\nimport \"./App.css\";\n\n// React.StrictMode, para obteener notificaciones más detalladas de posibles problemas\nReactDOM.render(\n  <React.StrictMode> \n    <TodoContainer />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__EiNWR\",\"checkbox\":\"TodoItem_checkbox__HTI3f\"};"],"sourceRoot":""}